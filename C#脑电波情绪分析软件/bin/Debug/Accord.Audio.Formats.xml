<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Audio.Formats</name>
    </assembly>
    <members>
        <member name="T:Accord.Audio.Extensions">
            <summary>
              Extension methods.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Extensions.ToWaveFormat(Accord.Audio.SampleFormat)">
            <summary>
              Converts a sample format into an appropriate <see cref="T:SharpDX.Multimedia.WaveFormatEncoding"/>.
            </summary>
            
            <param name="sampleFormat">The sample format.</param>
            
        </member>
        <member name="M:Accord.Audio.Extensions.ToSampleFormat(SharpDX.Multimedia.WaveFormatEncoding,System.Int32)">
            <summary>
              Converts a <see cref="T:SharpDX.Multimedia.WaveFormatEncoding"/> and bits per sample information
              into an appropriate <see cref="T:Accord.Audio.SampleFormat"/>.
            </summary>
            
            <param name="tag">The wave format tag.</param>
            <param name="bitsPerSample">The bits per sample.</param>
            
        </member>
        <member name="T:Accord.Audio.Formats.FrameInfo">
            <summary>
              Information about a audio frame.
            </summary>
            
            <remarks><para>This is a base class, which keeps basic information about a frame sample, like its
            sampling rate, bits per sample, etc. Classes, which inherit from this, may define more properties
            describing certain audio formats.</para></remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.FrameInfo.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Audio.Formats.FrameInfo"/> class.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.FrameInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Audio.Formats.FrameInfo"/> class.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.FrameInfo.Clone">
            <summary>
              Creates a new object that is a copy of the current instance. 
            </summary>
            
            <returns>A new object that is a copy of this instance.</returns>
            
        </member>
        <member name="P:Accord.Audio.Formats.FrameInfo.Channels">
            <summary>
              Number of channels.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.FrameInfo.SamplingRate">
            <summary>
              Sampling rate.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.FrameInfo.BitsPerSample">
            <summary>
              Number of bits per audio sample.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.FrameInfo.FrameIndex">
            <summary>
              Frame's index.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.FrameInfo.TotalFrames">
            <summary>
              Total frames in the audio.
            </summary>
            
        </member>
        <member name="T:Accord.Audio.Formats.WaveEncoder">
            <summary>
              Wave audio file encoder.
            </summary>
            
            <example>
            <code>
            // Create a stream to hold our encoded audio
            MemoryStream destinationStream = new MemoryStream();
            
            // Create a encoder for the destination stream
            WaveEncoder encoder = new WaveEncoder(destinationStream);
            
            // Encode the signal to the destination stream
            encoder.Encode(sourceSignal);
            </code>
            </example>
            
        </member>
        <member name="T:Accord.Audio.Formats.IAudioEncoder">
            <summary>
              Audio encoder interface, which specifies set of methods that should
              be implemented by audio encoders for different file formats.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioEncoder.Open(System.IO.Stream)">
            <summary>
              Open specified stream.
            </summary>
            
            <param name="stream">Stream to open.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
            <remarks><para>Implementation of this method is supposed to read audio's header,
            checking for correct audio format and reading its attributes.</para>
            
            <para>Implementations of this method may throw
            <see cref="T:System.FormatException"/> exception to report about unrecognized audio
            format, <see cref="T:System.ArgumentException"/> exception to report about incorrectly
            formatted audio or <see cref="T:System.NotSupportedException"/> exception to report if
            certain formats are not supported.</para>
            </remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioEncoder.Encode(Accord.Audio.Signal)">
            <summary>
              Encode all frames.
            </summary>
            
            <returns>Returns the encoded signal.</returns>
            
            <remarks>Implementations of this method may throw
            <see cref="T:System.NullReferenceException"/> exception in the case if no audio
            stream was opened previously, <see cref="T:System.ArgumentOutOfRangeException"/> in the
            case if stream does not contain frame with specified index or  <see cref="T:System.ArgumentException"/>
            exception to report about incorrectly formatted audio.
            </remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioEncoder.Close">
            <summary>
              Close encoding of previously opened stream.
            </summary>
            
            <remarks><para>Implementations of this method don't close stream itself, but just close
            decoding cleaning all associated data with it.</para></remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.#ctor">
            <summary>
              Constructs a new Wave encoder.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.#ctor(System.IO.FileStream)">
            <summary>
              Constructs a new Wave encoder.
            </summary>
            
            <param name="stream">A file stream to store the encoded data.</param>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.#ctor(System.IO.Stream)">
             <summary>
               Constructs a new Wave encoder.
             </summary>
             
             <param name="stream">A stream to store the encoded data.</param>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.#ctor(System.String)">
            <summary>
              Constructs a new Wave encoder.
            </summary>
            
            <param name="path">The path to a file to store the encoded data.</param>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.Open(System.IO.FileStream)">
            <summary>
              Opens the specified stream.
            </summary>
            
            <param name="stream">Stream to open.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.Open(System.IO.Stream)">
            <summary>
              Open specified stream.
            </summary>
            
            <param name="stream">Stream to open.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.Open(System.String)">
            <summary>
              Open specified stream.
            </summary>
            
            <param name="path">Path of file to open as stream.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.Close">
            <summary>
              Closes the underlying stream.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveEncoder.Encode(Accord.Audio.Signal)">
            <summary>
              Encodes the Wave stream into a Signal object.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Stream">
            <summary>
              Gets the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Channels">
            <summary>
              Gets the number of channels
              of the active Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Frames">
            <summary>
              Gets the total number of frames
              written by this Wave encoder.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Samples">
            <summary>
              Gets the total number of samples
              written by this Wave encoder.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.SampleRate">
            <summary>
              Gets the sample rate of
              the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Bytes">
            <summary>
              Gets the total number of bytes
              written by this Wave encoder.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Duration">
            <summary>
              Gets the total time span duration (in
              milliseconds) written by this encoder.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.AverageBitsPerSecond">
            <summary>
              Gets the average bits per second
              of the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.BitsPerSample">
            <summary>
              Gets the bits per sample of
              the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveEncoder.Format">
            <summary>
              Gets the sample format used by the encoder.
            </summary>
            
        </member>
        <member name="T:Accord.Audio.Formats.IAudioDecoder">
            <summary>
              Audio decoder interface, which specifies set of methods that should
              be implemented by audio decoders for different file formats.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioDecoder.Open(System.IO.Stream)">
            <summary>
              Open specified stream.
            </summary>
            
            <param name="stream">Stream to open.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
            <remarks><para>Implementation of this method is supposed to read audio's header,
            checking for correct audio format and reading its attributes.</para>
            
            <para>Implementations of this method may throw
            <see cref="T:System.FormatException"/> exception to report about unrecognized audio
            format, <see cref="T:System.ArgumentException"/> exception to report about incorrectly
            formatted audio or <see cref="T:System.NotSupportedException"/> exception to report if
            certain formats are not supported.</para>
            </remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioDecoder.Decode">
            <summary>
              Decode all frames.
            </summary>
            
            <returns>Returns the decoded signal.</returns>
            
            <remarks>Implementations of this method may throw
            <see cref="T:System.NullReferenceException"/> exception in the case if no audio
            stream was opened previously, <see cref="T:System.ArgumentOutOfRangeException"/> in the
            case if stream does not contain frame with specified index or  <see cref="T:System.ArgumentException"/>
            exception to report about incorrectly formatted audio.
            </remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioDecoder.Decode(System.Int32,System.Int32)">
            <summary>
              Decode a number of frames.
            </summary>
            
            <param name="index">Audio frame index to start decoding.</param>
            <param name="frames">The number of frames to decode.</param>
            
            <returns>Returns the decoded signal.</returns>
            
            <remarks>Implementations of this method may throw
            <see cref="T:System.NullReferenceException"/> exception in the case if no audio
            stream was opened previously, <see cref="T:System.ArgumentOutOfRangeException"/> in the
            case if stream does not contain frame with specified index or  <see cref="T:System.ArgumentException"/>
            exception to report about incorrectly formatted audio.
            </remarks>
            
        </member>
        <member name="M:Accord.Audio.Formats.IAudioDecoder.Close">
            <summary>
              Close decoding of previously opened stream.
            </summary>
            
            <remarks><para>Implementations of this method don't close stream itself, but just close
            decoding cleaning all associated data with it.</para></remarks>
            
        </member>
        <member name="T:Accord.Audio.Formats.WaveDecoder">
            <summary>
              Wave audio file decoder.
            </summary>
            
            <example>
            <code>
            // Let's decode a Wave audio file
            UnmanagedMemoryStream sourceStream = ...
            
            // Create a decoder for the source stream
            WaveDecoder sourceDecoder = new WaveDecoder(sourceStream);
            
            // At this point, we can query some properties of the audio file:
            int channels =  sourceDecoder.Channels;
            int samples  =  sourceDecoder.Samples;
            int frames   =  sourceDecoder.Frames;
            int duration =  sourceDecoder.Duration;
            int rate     =  sourceDecoder.SampleRate;
            int bps      =  sourceDecoder.BitsPerSample;
            
            // Decode the signal in the source stream
            Signal sourceSignal = sourceDecoder.Decode();
            </code>
            </example>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.#ctor">
            <summary>
              Constructs a new Wave decoder.
            </summary>
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.#ctor(System.IO.Stream)">
            <summary>
              Constructs a new Wave decoder.
            </summary>
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.#ctor(System.String)">
            <summary>
              Constructs a new Wave decoder.
            </summary>
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Open(SharpDX.Multimedia.SoundStream)">
            <summary>
              Opens the specified stream.
            </summary>
            
            <param name="stream">Stream to open.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Open(System.IO.Stream)">
            <summary>
              Open specified stream.
            </summary>
            
            <param name="stream">Stream to open.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Open(System.String)">
            <summary>
              Open specified stream.
            </summary>
            
            <param name="path">Path of file to open as stream.</param>
            
            <returns>Returns number of frames found in the specified stream.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Seek(System.Int32)">
            <summary>
              Navigates to a position in this Wave stream.
            </summary>
            
            <param name="frameIndex">The index of the sample to navigate to.</param>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Decode">
            <summary>
              Decodes the Wave stream into a Signal object.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Decode(System.Int32)">
            <summary>
              Decodes the Wave stream into a Signal object.
            </summary>
            
            <param name="frames">The number of frames to decode.</param>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Decode(System.Int32,System.Int32)">
            <summary>
            Decodes the Wave stream into a Signal object.
            </summary>
            
            <param name="index">Audio frame index to start decoding.</param>
            <param name="frames">The number of frames to decode.</param>
            
            <returns>Returns the decoded signal.</returns>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.Close">
            <summary>
              Closes the underlying stream.
            </summary>
            
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.read(System.Single[],System.Int32)">
            <summary>
              Reads a maximum of count samples from the current stream, and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">
               When this method returns, this parameter contains the specified byte array with the values between index and (index + count -1) replaced by the 8 bit frames read from the current source.
            </param>
            <param name="count">The amount of frames to read.</param>
            <returns>The number of reads performed on the stream.</returns>
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.read(System.Int16[],System.Int32)">
            <summary>
              Reads a maximum of count frames from the current stream, and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">
               When this method returns, this parameter contains the specified byte array with the values between index and (index + count -1) replaced by the 8 bit frames read from the current source.
            </param>
            <param name="count">The amount of frames to read.</param>
            <returns>The number of reads performed on the stream.</returns>
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.read(System.Int32[],System.Int32)">
            <summary>
              Reads a maximum of count frames from the current stream, and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">
               When this method returns, this parameter contains the specified byte array with the values between index and (index + count -1) replaced by the 8 bit frames read from the current source.
            </param>
            <param name="count">The amount of frames to read.</param>
            <returns>The number of reads performed on the stream.</returns>
        </member>
        <member name="M:Accord.Audio.Formats.WaveDecoder.read(System.Byte[],System.Int32)">
            <summary>
              Reads a maximum of count frames from the current stream, and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">
               When this method returns, this parameter contains the specified byte array with the values between index and (index + count -1) replaced by the 8 bit frames read from the current source.
            </param>
            <param name="count">The amount of frames to read.</param>
            <returns>The number of reads performed on the stream.</returns>
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Position">
            <summary>
              Gets the current frame within
              the current decoder stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Channels">
            <summary>
              Gets the number of channels of
              the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Frames">
            <summary>
              Gets the number of frames of
              the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Samples">
            <summary>
              Gets the number of samples of
              the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.SampleRate">
            <summary>
              Gets the sample rate for
              the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Stream">
            <summary>
              Gets the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Bytes">
            <summary>
              Gets the total number of bytes
              read by this Wave encoder.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.Duration">
            <summary>
              Gets the total time span duration (in
              milliseconds) read by this encoder.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.AverageBitsPerSecond">
            <summary>
              Gets the average bits per second
              of the underlying Wave stream.
            </summary>
            
        </member>
        <member name="P:Accord.Audio.Formats.WaveDecoder.BitsPerSample">
            <summary>
              Gets the bits per sample of
              the underlying Wave stream.
            </summary>
            
        </member>
    </members>
</doc>
